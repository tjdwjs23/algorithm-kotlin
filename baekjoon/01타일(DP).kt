/**
 * 지원이에게 2진 수열을 가르쳐 주기 위해, 지원이 아버지는 그에게 타일들을 선물해주셨다. 그리고 이 각각의 타일들은 0 또는 1이 쓰여 있는 낱장의 타일들이다.
 *
 * 어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 0이 쓰여진 낱장의 타일들을 붙여서 한 쌍으로 이루어진 00 타일들을 만들었다. 결국 현재 1 하나만으로 이루어진 타일 또는 0타일을 두 개 붙인 한 쌍의 00타일들만이 남게 되었다.
 *
 * 그러므로 지원이는 타일로 더 이상 크기가 N인 모든 2진 수열을 만들 수 없게 되었다. 예를 들어, N=1일 때 1만 만들 수 있고, N=2일 때는 00, 11을 만들 수 있다. (01, 10은 만들 수 없게 되었다.) 또한 N=4일 때는 0011, 0000, 1001, 1100, 1111 등 총 5개의 2진 수열을 만들 수 있다.
 *
 * 우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다. 단 타일들은 무한히 많은 것으로 가정하자.
 */

fun main() = System.`in`.bufferedReader().run {
    val n = readLine()!!.toInt()
    // modifiedFibo 함수를 호출하여 결과를 출력합니다. 초기 pre 값은 0, next 값은 1로 설정합니다.
    print(modifiedFibo(n, 1, 1))
}

// tailrec 키워드를 사용한 꼬리 재귀 함수 modifiedFibo를 정의합니다.
// 이 함수는 n, pre, next를 인자로 받아 주어진 문제의 조건에 맞는 수열을 계산합니다.
tailrec fun modifiedFibo(n: Int, pre: Int, next: Int): Int {
    // 기저 조건: n이 0 이하일 경우, pre 값을 반환합니다.
    if (n <= 0) return pre
    // 재귀 호출: n을 1 감소시키고, pre에는 next 값을, next에는 (pre + next) % 15746 값을 넣어 호출합니다.
    return modifiedFibo(n - 1, next, (pre + next) % 15746)
}